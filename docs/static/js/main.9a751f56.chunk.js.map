{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GiftGrid.js","hooks/useFetchGifts.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifts","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GiftGrid","loading","state","setState","useEffect","then","imgs","useFetchGifts","GifExpertApp","categories","cat","ReactDOM","render","document","getElementById"],"mappings":"6LAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAiBhD,OACE,sBAAMC,SAXa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,GAC7BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OAG1CN,EAAc,KAId,SACE,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAhBrB,SAACP,GACpBF,EAAcE,EAAEQ,OAAOF,a,QCLdG,EAAc,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACnC,OACE,sBAAKC,UAAU,yCAAf,UACE,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCNGK,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAChBN,EADgB,0FACyEO,UAC7FF,GAFoB,sBAIHG,MAAMR,GAJH,cAIhBS,EAJgB,gBAKCA,EAAKC,OALN,uBAKdC,EALc,EAKdA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QAXhB,kBAefY,GAfe,4CAAH,sDCIRM,EAAW,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACfpB,mBAAS,CACjC0B,KAAM,GACNQ,SAAS,IAH8B,mBAClCC,EADkC,KAC3BC,EAD2B,KAezC,OATAC,qBAAU,WACRlB,EAASC,GAAUkB,MAAK,SAACC,GACvBH,EAAS,CACPV,KAAMa,EACNL,SAAS,SAGZ,CAACd,IAEGe,EDb2BK,CAAcpB,GAAxCc,EADgC,EAChCA,QAAeH,EADiB,EACvBL,KAEjB,OACE,qCACE,6BAAKN,IAEJc,GAAW,aAEZ,qBAAKlB,UAAU,YAAf,SACGe,EAAOH,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEOjBW,EAlBa,WAAO,IAAD,EACIzC,mBAAS,CAAC,cADd,mBACzB0C,EADyB,KACb3C,EADa,KAGhC,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BACG2C,EAAWd,KAAI,SAACe,GAAD,OACd,cAAC,EAAD,CAAoBvB,SAAUuB,GAAfA,Y,MCTzBC,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.9a751f56.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const handleChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (inputValue.trim().length > 2) {\n      setCategories((cats) => [inputValue, ...cats]);\n    }\n\n    setInputValue('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" value={inputValue} onChange={handleChange} />\n    </form>\n  );\n};\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n};\n","import React from 'react';\n\nexport const GifGridItem = ({ title, url }) => {\n  return (\n    <div className=\"card animate__animated animate__fadeIn\">\n      <img src={url} alt={title} />\n      <p>{title}</p>\n    </div>\n  );\n};\n","export const getGifts = async (category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?api_key=ms9dSl2rxGf29KMgixjaUdweTxIgZ9XY&q=${encodeURI(\n    category\n  )}&limit=10`;\n  const resp = await fetch(url);\n  const { data } = await resp.json();\n\n  const gifs = data.map((img) => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url,\n    };\n  });\n\n  return gifs;\n};\n","import React from 'react';\nimport { GifGridItem } from './GifGridItem';\nimport { useFetchGifts } from '../hooks/useFetchGifts';\n\nexport const GiftGrid = ({ category }) => {\n  const { loading, data: images } = useFetchGifts(category);\n\n  return (\n    <>\n      <h3>{category}</h3>\n\n      {loading && 'Loading...'}\n\n      <div className=\"card-grid\">\n        {images.map((img) => (\n          <GifGridItem key={img.id} {...img} />\n        ))}\n      </div>\n    </>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { getGifts } from '../helpers/getGifs';\n\nexport const useFetchGifts = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  });\n\n  useEffect(() => {\n    getGifts(category).then((imgs) => {\n      setState({\n        data: imgs,\n        loading: false,\n      });\n    });\n  }, [category]);\n\n  return state;\n};\n","import React, { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GiftGrid } from './components/GiftGrid';\n\nexport const GifExpertApp = () => {\n  const [categories, setCategories] = useState(['One Punch']);\n\n  return (\n    <>\n      <h2>GifExpertApp</h2>\n      <AddCategory setCategories={setCategories} />\n      <hr />\n\n      <ol>\n        {categories.map((cat) => (\n          <GiftGrid key={cat} category={cat} />\n        ))}\n      </ol>\n    </>\n  );\n};\n\nexport default GifExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root'));\n"],"sourceRoot":""}